name: build-oval-files
on:
  push:
    branches:
      - master
jobs:
  build-xml-files:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install OS Dependencies
        run: sudo apt install -y python3-lxml jq
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Install Python Dependencies
        run: python -m pip install -r scripts/requirements.txt
      - name: Build Web Indexes
        run: python ./scripts/web_update_indexes.py > /dev/null
      - name: Get All Platforms
        run: python ./scripts/web_get_repository_stats.py --platform > platforms.json
      - name: Get All Classes
        run: python ./scripts/web_get_repository_stats.py --class > classes.json
      - name: Create Output Directory
        run: mkdir ./output-files
      - name: Build Individual Files
        run: |
          cat platforms.json | jq '.RESULTS.platforms | keys[]' | while read platform; do
            platform=`sed -e 's/^"//' -e 's/"$//' -e 's/\// /' <<<"$platform"`
            platform_filename=`sed -e 's/ /_/g' <<<"$platform"`
            echo "Build OVAL Definitions Files for $platform"
            if [ ! -z "$platform" ]; then
              cat classes.json | jq '.RESULTS.class | keys[]' | while read class; do
                class=`sed -e 's/^"//' -e 's/"$//' <<<"$class"`
                if [ ! -z "$class" ]; then
                    mkdir -p "./output-files/5.10/$class/"
                    mkdir -p "./output-files/5.11.1/$class/"
                    mkdir -p "./output-files/5.11.2/$class/"
                    python ./scripts/build_oval_definitions_file.py --outfile="./output-files/5.10/$class/$platform_filename.xml" --max_schema_version=5.10 --platform="$platform" --class=$class > /dev/null
                    python ./scripts/build_oval_definitions_file.py --outfile="./output-files/5.11.1/$class/$platform_filename.xml" --max_schema_version=5.11.1 --platform="$platform" --class=$class > /dev/null
                    python ./scripts/build_oval_definitions_file.py --outfile="./output-files/5.11.2/$class/$platform_filename.xml" --max_schema_version=5.11.2 --platform="$platform" --class=$class > /dev/null
                fi
              done
            fi
          done
      - name: Build All Definitions File
        run: python ./scripts/build_oval_definitions_file.py --all_definitions --outfile ./output-files/oval.xml
      - name: Package All Files
        run: |
          ls -lah ./output-files
          zip -r build.zip ./output-files
          echo "Release!" > body.md
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0
      - name: Bump Release Version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.previoustag.outputs.tag }}
          version-fragment: 'feature'
      - name: Create Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          artifacts: "build.zip"
          bodyFile: "body.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "v${{ steps.bump_version.outputs.next-version }}"
