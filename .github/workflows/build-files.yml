name: build-oval-files
on: [push]
jobs:
  build-xml-files:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - run: sudo apt install -y python3-lxml jq
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Build Web Indexes
        run: | 
          python -m pip install -r scripts/requirements.txt
          mkdir ./output-files
          python ./scripts/web_update_indexes.py > /dev/null
      - name: Get All Platforms
        run: python ./scripts/web_get_repository_stats.py --platform > platforms.json
      - name: Build Files
        run: |
          cat platforms.json | jq '.RESULTS.platforms | keys[]' | while read platform; do
            echo "Build OVAL Definitions Files for $platform"
            for directory in $(ls ./repository/definitions); do
              if [ -d "$directory" ]; then
                  python ./scripts/build_oval_definitions_file.py --outfile=./output-files/5.10/$directory/$platform.xml --max_schema_version=5.10 --platform=$platform --class=$directory
                  python ./scripts/build_oval_definitions_file.py --outfile=./output-file/5.11.1/$directory/$platform.xml --max_schema_version=5.11.1 --platform=$platform --class=$directory
                  python ./scripts/build_oval_definitions_file.py --outfile=./output-files/5.11.2/$directory/$platform.xml --max_schema_version=5.11.2 --platform=$platform --class=$directory
              fi
            done
          done
          
          echo "Build All OVAL Definitions File"
          python ./scripts/build_oval_definitions_file.py --all_definitions --outfile ./output-files/oval.xml
          ls -lah ./output-files
          zip -r build.zip ./output-files
          echo "Release!" > body.md
      - name: Create Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          artifacts: "build.zip"
          bodyFile: "body.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "v1.3"
